{"ast":null,"code":"var _jsxFileName = \"/Users/cindy/Cindywritescode/react-router-great-quote/src/pages/QuoteDetail.js\",\n    _s = $RefreshSig$();\n\nimport { Route, useParams } from 'react-router-dom';\nimport { Fragment } from 'react';\nimport Comments from '../components/comments/Comments';\nimport HighlightedQuote from '../components/quotes/HighlightedQuote'; // const DUMMY_QUOTES = [\n//   { id: 'q1', author: 'Cindy', text: 'learning React is great' },\n//   { id: 'q2', author: 'Liang', text: 'This React course is amazing' },\n//   { id: 'q3', author: 'Lihsin', text: 'This React course is ok' },\n//   { id: 'q4', author: 'Ben', text: 'I like udemy' },\n//   { id: 'q5', author: 'Alex', text: 'Free code camp is my favourite' },\n// ];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const QuoteDetail = (text, author) => {\n  _s();\n\n  const params = useParams(); //\n  // const quote = DUMMY_QUOTES.find(quote => quote.id === params.quoteId );\n  //\n  // if (!quote) {\n  //   return <p>No quote found!</p>\n  // }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: text,\n      author: author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: params.quoteId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `/quotes/${params.quoteId}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteDetail, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n\n_c = QuoteDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"sources":["/Users/cindy/Cindywritescode/react-router-great-quote/src/pages/QuoteDetail.js"],"names":["Route","useParams","Fragment","Comments","HighlightedQuote","QuoteDetail","text","author","params","quoteId"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,SAAhB,QAAiC,kBAAjC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,MAAMC,WAAW,GAAG,CACzBC,IADyB,EAEzBC,MAFyB,KAGtB;AAAA;;AACH,QAAMC,MAAM,GAAGP,SAAS,EAAxB,CADG,CAEH;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAEK,IAAxB;AAA8B,MAAA,MAAM,EAAEC;AAAtC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAIC,MAAM,CAACC;AAAX;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,WAAUD,MAAM,CAACC,OAAQ,WAAvC;AAAA,6BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CArBM;;GAAMJ,W;UAIIJ,S;;;KAJJI,W","sourcesContent":["import { Route, useParams } from 'react-router-dom';\nimport { Fragment } from 'react';\nimport Comments from '../components/comments/Comments';\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\n\n// const DUMMY_QUOTES = [\n//   { id: 'q1', author: 'Cindy', text: 'learning React is great' },\n//   { id: 'q2', author: 'Liang', text: 'This React course is amazing' },\n//   { id: 'q3', author: 'Lihsin', text: 'This React course is ok' },\n//   { id: 'q4', author: 'Ben', text: 'I like udemy' },\n//   { id: 'q5', author: 'Alex', text: 'Free code camp is my favourite' },\n// ];\n\nexport const QuoteDetail = (\n  text,\n  author\n) => {\n  const params = useParams();\n  //\n  // const quote = DUMMY_QUOTES.find(quote => quote.id === params.quoteId );\n  //\n  // if (!quote) {\n  //   return <p>No quote found!</p>\n  // }\n\n  return (\n    <Fragment>\n      <HighlightedQuote text={text} author={author} />\n      <p>{params.quoteId}</p>\n      <Route path={`/quotes/${params.quoteId}/comments`} >\n        <Comments/>\n      </Route>\n    </Fragment>\n  );\n};"]},"metadata":{},"sourceType":"module"}