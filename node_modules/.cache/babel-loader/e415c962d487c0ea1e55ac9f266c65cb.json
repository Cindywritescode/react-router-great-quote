{"ast":null,"code":"var _jsxFileName = \"/Users/cindy/Cindywritescode/react-router-great-quote/src/pages/QuoteDetail.js\",\n    _s = $RefreshSig$();\n\nimport { Link, Route, useParams } from 'react-router-dom';\nimport { Fragment } from 'react';\nimport Comments from '../components/comments/Comments';\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_QUOTES = [{\n  id: 'q1',\n  author: 'Cindy',\n  text: 'learning React is great'\n}, {\n  id: 'q2',\n  author: 'Liang',\n  text: 'This React course is amazing'\n}, {\n  id: 'q3',\n  author: 'Lihsin',\n  text: 'This React course is ok'\n}, {\n  id: 'q4',\n  author: 'Ben',\n  text: 'I like udemy'\n}, {\n  id: 'q5',\n  author: 'Alex',\n  text: 'Free code camp is my favourite'\n}];\nexport const QuoteDetail = () => {\n  _s();\n\n  const params = useParams();\n  const quote = DUMMY_QUOTES.find(quote => quote.id === params.quoteId);\n\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(NoQuotesFound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `/quotes/${params.quoteId}`,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `/quotes/${params.quoteId}/comments`,\n          children: \"Load Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `/quotes/${params.quoteId}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        className: \"btn--flat\",\n        to: `/quotes`,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteDetail, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n\n_c = QuoteDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"sources":["/Users/cindy/Cindywritescode/react-router-great-quote/src/pages/QuoteDetail.js"],"names":["Link","Route","useParams","Fragment","Comments","HighlightedQuote","NoQuotesFound","DUMMY_QUOTES","id","author","text","QuoteDetail","params","quote","find","quoteId"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,KAAf,EAAsBC,SAAtB,QAAuC,kBAAvC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;AACA,OAAOC,aAAP,MAA0B,oCAA1B;;AAEA,MAAMC,YAAY,GAAG,CACnB;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,MAAM,EAAE,OAApB;AAA6BC,EAAAA,IAAI,EAAE;AAAnC,CADmB,EAEnB;AAAEF,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,MAAM,EAAE,OAApB;AAA6BC,EAAAA,IAAI,EAAE;AAAnC,CAFmB,EAGnB;AAAEF,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,MAAM,EAAE,QAApB;AAA8BC,EAAAA,IAAI,EAAE;AAApC,CAHmB,EAInB;AAAEF,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,MAAM,EAAE,KAApB;AAA2BC,EAAAA,IAAI,EAAE;AAAjC,CAJmB,EAKnB;AAAEF,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,MAAM,EAAE,MAApB;AAA4BC,EAAAA,IAAI,EAAE;AAAlC,CALmB,CAArB;AAQA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAC/B,QAAMC,MAAM,GAAGV,SAAS,EAAxB;AAEA,QAAMW,KAAK,GAAGN,YAAY,CAACO,IAAb,CAAkBD,KAAK,IAAIA,KAAK,CAACL,EAAN,KAAaI,MAAM,CAACG,OAA/C,CAAd;;AAEA,MAAI,CAACF,KAAL,EAAY;AACV,wBAAO,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAEA,KAAK,CAACH,IAA9B;AAAoC,MAAA,MAAM,EAAEG,KAAK,CAACJ;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,WAAUG,MAAM,CAACG,OAAQ,EAAvC;AAA0C,MAAA,KAAK,MAA/C;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,WAAhB;AAA4B,UAAA,EAAE,EAAG,WAAUH,MAAM,CAACG,OAAQ,WAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eASE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,WAAUH,MAAM,CAACG,OAAQ,WAAvC;AAAA,6BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATF,eAYE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,WAAhB;AAA4B,QAAA,EAAE,EAAG,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CA7BM;;GAAMJ,W;UACIT,S;;;KADJS,W","sourcesContent":["import { Link, Route, useParams } from 'react-router-dom';\nimport { Fragment } from 'react';\nimport Comments from '../components/comments/Comments';\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\n\nconst DUMMY_QUOTES = [\n  { id: 'q1', author: 'Cindy', text: 'learning React is great' },\n  { id: 'q2', author: 'Liang', text: 'This React course is amazing' },\n  { id: 'q3', author: 'Lihsin', text: 'This React course is ok' },\n  { id: 'q4', author: 'Ben', text: 'I like udemy' },\n  { id: 'q5', author: 'Alex', text: 'Free code camp is my favourite' },\n];\n\nexport const QuoteDetail = () => {\n  const params = useParams();\n\n  const quote = DUMMY_QUOTES.find(quote => quote.id === params.quoteId);\n\n  if (!quote) {\n    return <NoQuotesFound/>;\n  }\n\n  return (\n    <Fragment>\n      <HighlightedQuote text={quote.text} author={quote.author}/>\n      <Route path={`/quotes/${params.quoteId}`} exact>\n        <div className=\"centered\">\n          <Link className=\"btn--flat\" to={`/quotes/${params.quoteId}/comments`}>\n            Load Comments\n          </Link>\n        </div>\n      </Route>\n      <Route path={`/quotes/${params.quoteId}/comments`}>\n        <Comments/>\n      </Route>\n      <div className=\"centered\">\n        <Link className=\"btn--flat\" to={`/quotes`}>\n          Back\n        </Link>\n      </div>\n    </Fragment>\n  );\n};"]},"metadata":{},"sourceType":"module"}